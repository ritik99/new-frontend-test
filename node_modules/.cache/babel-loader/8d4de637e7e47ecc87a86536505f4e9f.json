{"ast":null,"code":"var _jsxFileName = \"/Users/ritikdutta/Desktop/sublime-frontend/src/components/uiElements/CreditLinesClosing/index.js\";\nimport React from 'react';\nimport { useState } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreditLinesClosing({\n  showClosingModal,\n  setShowClosingModal,\n  sendCreditLineRequestCancel\n}) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: showClosingModal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageModalOverlay pageModalOverlayMain\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"borrowPoolWindow borrowPoolWindowClosing\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"borrowPoolWindowHeader\",\n          children: \"Are you sure you wish to close the credit line?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closingButtons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setShowClosingModal(false);\n            },\n            className: \"closingButton button\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              sendCreditLineRequestCancel();\n            },\n            className: \"closingButton button\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = CreditLinesClosing;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreditLinesClosing\");","map":{"version":3,"sources":["/Users/ritikdutta/Desktop/sublime-frontend/src/components/uiElements/CreditLinesClosing/index.js"],"names":["React","useState","CreditLinesClosing","showClosingModal","setShowClosingModal","sendCreditLineRequestCancel"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,aAAP;;AAEA,eAAe,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA,mBAApB;AAAyCC,EAAAA;AAAzC,CAA5B,EAAoG;AACjH,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGF,gBAAgB,gBACf;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,OAAO,EAAE,MAAM;AACbC,cAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,aAHH;AAIE,YAAA,SAAS,EAAC,sBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eASE;AACE,YAAA,OAAO,EAAE,MAAM;AACbC,cAAAA,2BAA2B;AAC5B,aAHH;AAIE,YAAA,SAAS,EAAC,sBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADe,GAyBb;AA1BN;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;KA/BuBH,kB","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nimport './style.css';\n\nexport default function CreditLinesClosing({ showClosingModal, setShowClosingModal, sendCreditLineRequestCancel }) {\n  return (\n    <React.Fragment>\n      {showClosingModal ? (\n        <div className=\"pageModalOverlay pageModalOverlayMain\">\n          <div className=\"borrowPoolWindow borrowPoolWindowClosing\">\n            <div className=\"borrowPoolWindowHeader\">Are you sure you wish to close the credit line?</div>\n\n            <div className=\"closingButtons\">\n              <div\n                onClick={() => {\n                  setShowClosingModal(false);\n                }}\n                className=\"closingButton button\"\n              >\n                No\n              </div>\n              <div\n                onClick={() => {\n                  sendCreditLineRequestCancel();\n                }}\n                className=\"closingButton button\"\n              >\n                Yes\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}