{"ast":null,"code":"var _jsxFileName = \"/Users/ritikdutta/Desktop/SUBLIME/sublime-frontend/src/components/pages/Profile/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Header from '../../uiElements/Header';\nimport Footer from '../../uiElements/Footer';\nimport { useHistory } from 'react-router-dom';\nimport ProfileTabs from '../../uiElements/Tabs/ProfileTabs';\nimport './style.css';\nimport request from 'request';\nimport { borrowPools } from './../../../query/pool/borrowingPools';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FVerify(tUsername) {\n  if (tUsername == 'Verify Now') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twitterVerifiedLine2\",\n      children: \"Unverified\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twitterVerifiedLine2\",\n      children: \"Verified\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_c = FVerify;\n\nfunction IsVerified(props) {\n  const data = JSON.stringify({\n    query: `{\n            twitterDetails(where:{id:\"${window.sessionStorage.getItem('address')}\"}) {\n              id\n                  twitterId\n            }\n          }          \n          `\n  });\n  var options = {\n    method: 'POST',\n    url: 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: data\n  };\n  console.log('hey');\n  var result = request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n\n    if (body.data.twitterDetails.length != 0) {\n      let name = 'user name';\n\n      try {\n        name = ethers.utils.parseBytes32String(body.data.twitterDetails[0].twitterId);\n      } catch (error) {}\n\n      props.setTUsername(name); // return \"Doing it\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"twitterVerifiedLineButton\",\n    onClick: () => props.verifyTwitter('data'),\n    children: props.tUsername\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = IsVerified;\nexport default function Profile() {\n  _s();\n\n  const address = window.sessionStorage.getItem('address');\n  const [poolBorrowData, setpoolBorrowData] = useState([]);\n  const history = useHistory();\n\n  if (address == '0x00000000') {\n    history.push('/');\n  }\n\n  if (address == null || address == '0x0000000000') {\n    history.push('/');\n  }\n\n  const shortAddress = address.slice(0, 6) + '...' + address.slice(36, 42);\n  const userData = {\n    address: shortAddress,\n    verified: false\n  };\n  const [tUsername, setTUsername] = useState('Verify Now');\n  const [isLoading, setIsLoading] = useState(false); //Hide Loading Screen setIsLoading(false);\n\n  useEffect(() => {\n    borrowPools(address, setpoolBorrowData);\n  }, []);\n  console.log(poolBorrowData); // const borrowData = [\n  //     {\n  //         id: 1,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Active',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '45%',\n  //         next_payment: '200 DOT',\n  //         ends_date: '2d 12h 34m',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 2,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Grace Period',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '55%',\n  //         next_payment: '200 DOT',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 3,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Collecting',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 4,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Closed',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 5,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Defaulted',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 6,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Cancelled',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 7,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Terminated',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  // ];\n\n  const verifyTwitter = data => {\n    alert('Verify Twitter Operation');\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageOuter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageWrapper pageWrapperPadding\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileLelfPart\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileLelfPartLine profileLelfPartLine1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileUserIcon\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profileUserVerifiedBadge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileUserAddress\",\n              children: userData.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileLelfPartLine\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twitterVerified\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"twitterVerifiedLelft\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"twitterVerifiedLine1\",\n                  children: \"Twitter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FVerify, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IsVerified, {\n                tUsername: tUsername,\n                setTUsername: setTUsername,\n                verifyTwitter: verifyTwitter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileRightPart\",\n          children: /*#__PURE__*/_jsxDEV(ProfileTabs, {\n            borrowData: poolBorrowData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"aHWqP3q509uB94b3r5ome0DzVSk=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = Profile;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FVerify\");\n$RefreshReg$(_c2, \"IsVerified\");\n$RefreshReg$(_c3, \"Profile\");","map":{"version":3,"sources":["/Users/ritikdutta/Desktop/SUBLIME/sublime-frontend/src/components/pages/Profile/index.js"],"names":["React","useState","useEffect","Header","Footer","useHistory","ProfileTabs","request","borrowPools","ethers","FVerify","tUsername","IsVerified","props","data","JSON","stringify","query","window","sessionStorage","getItem","options","method","url","headers","body","console","log","result","error","response","Error","parse","twitterDetails","length","name","utils","parseBytes32String","twitterId","setTUsername","verifyTwitter","Profile","address","poolBorrowData","setpoolBorrowData","history","push","shortAddress","slice","userData","verified","isLoading","setIsLoading","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Header from '../../uiElements/Header';\nimport Footer from '../../uiElements/Footer';\nimport { useHistory } from 'react-router-dom';\nimport ProfileTabs from '../../uiElements/Tabs/ProfileTabs';\nimport './style.css';\nimport request from 'request';\nimport { borrowPools } from './../../../query/pool/borrowingPools';\nimport { ethers } from 'ethers';\n\nfunction FVerify(tUsername) {\n  if (tUsername == 'Verify Now') {\n    return <div className=\"twitterVerifiedLine2\">Unverified</div>;\n  } else {\n    return <div className=\"twitterVerifiedLine2\">Verified</div>;\n  }\n}\n\nfunction IsVerified(props) {\n  const data = JSON.stringify({\n    query: `{\n            twitterDetails(where:{id:\"${window.sessionStorage.getItem('address')}\"}) {\n              id\n                  twitterId\n            }\n          }          \n          `,\n  });\n\n  var options = {\n    method: 'POST',\n    url: 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    headers: { 'Content-Type': 'application/json' },\n    body: data,\n  };\n  console.log('hey');\n  var result = request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    if (body.data.twitterDetails.length != 0) {\n      let name = 'user name';\n      try {\n        name = ethers.utils.parseBytes32String(body.data.twitterDetails[0].twitterId);\n      } catch (error) {}\n      props.setTUsername(name);\n      // return \"Doing it\"\n    }\n  });\n  return (\n    <div className=\"twitterVerifiedLineButton\" onClick={() => props.verifyTwitter('data')}>\n      {props.tUsername}\n    </div>\n  );\n}\n\nexport default function Profile() {\n  const address = window.sessionStorage.getItem('address');\n  const [poolBorrowData, setpoolBorrowData] = useState([]);\n  const history = useHistory();\n  if (address == '0x00000000') {\n    history.push('/');\n  }\n  if (address == null || address == '0x0000000000') {\n    history.push('/');\n  }\n\n  const shortAddress = address.slice(0, 6) + '...' + address.slice(36, 42);\n\n  const userData = {\n    address: shortAddress,\n    verified: false,\n  };\n\n  const [tUsername, setTUsername] = useState('Verify Now');\n  const [isLoading, setIsLoading] = useState(false);\n\n  //Hide Loading Screen setIsLoading(false);\n\n  useEffect(() => {\n    borrowPools(address, setpoolBorrowData);\n  }, []);\n  console.log(poolBorrowData);\n\n  // const borrowData = [\n  //     {\n  //         id: 1,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Active',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '45%',\n  //         next_payment: '200 DOT',\n  //         ends_date: '2d 12h 34m',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 2,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Grace Period',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '55%',\n  //         next_payment: '200 DOT',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 3,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Collecting',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 4,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Closed',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 5,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Defaulted',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 6,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Cancelled',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 7,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Terminated',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  // ];\n\n  const verifyTwitter = (data) => {\n    alert('Verify Twitter Operation');\n  };\n\n  return (\n    <React.Fragment>\n      <Header isLoading={isLoading} />\n      <div className=\"pageOuter\">\n        <div className=\"pageWrapper pageWrapperPadding\">\n          <div className=\"profileLelfPart\">\n            <div className=\"profileLelfPartLine profileLelfPartLine1\">\n              <div className=\"profileUserIcon\">\n                <div className=\"profileUserVerifiedBadge\"></div>\n              </div>\n\n              <div className=\"profileUserAddress\">{userData.address}</div>\n            </div>\n\n            <div className=\"profileLelfPartLine\">\n              <div className=\"twitterVerified\">\n                <div className=\"twitterVerifiedLelft\">\n                  <div className=\"twitterVerifiedLine1\">Twitter</div>\n                  <FVerify></FVerify>\n                  {/* <div className=\"twitterVerifiedLine2\">\n                                        Unverified\n                                    </div> */}\n                </div>\n                <IsVerified tUsername={tUsername} setTUsername={setTUsername} verifyTwitter={verifyTwitter} />\n                {/* <div className=\"twitterVerifiedLineButton\" onClick={() => verifyTwitter('data') }>\n                                    Verify now\n                                </div> */}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"profileRightPart\">\n            <ProfileTabs borrowData={poolBorrowData} />\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}