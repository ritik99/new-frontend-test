{"ast":null,"code":"import request from 'request';\nimport { SUBGRAPH_API_URL } from '../../utility/constants';\nexport const getGlobalPoolDetail = async (onSuccess, onErrorCallback) => {\n  let result;\n  const data = JSON.stringify({\n    query: `{\n            globalPoolDetails {\n              collectionPeriod\n              matchCollateralRatioInterval\n            }\n        }`\n  });\n  var options = {\n    'method': 'POST',\n    'url': SUBGRAPH_API_URL,\n    'headers': {\n      'Content-Type': 'application/json'\n    },\n    'body': data\n  };\n  result = await request(options, async function (error, response) {\n    if (error) {\n      onErrorCallback({\n        error: true,\n        message: error.message\n      });\n      throw new Error(error);\n    }\n\n    ;\n    var body = JSON.parse(response.body);\n\n    if (body) {\n      if (body.data) {\n        if (body.data.globalPoolDetails && body.data.globalPoolDetails.length > 0) {\n          onSuccess(body.data.globalPoolDetails[0]);\n        }\n      } else if (body.errors) {\n        onErrorCallback({\n          error: true,\n          message: body.errors[0].message\n        });\n      }\n    } else {\n      onErrorCallback({\n        error: true,\n        message: 'No pool detail available.'\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/Users/ritikdutta/Desktop/sublime-frontend/src/query/pool/globalPoolDetails.js"],"names":["request","SUBGRAPH_API_URL","getGlobalPoolDetail","onSuccess","onErrorCallback","result","data","JSON","stringify","query","options","error","response","message","Error","body","parse","globalPoolDetails","length","errors"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;AAGA,OAAO,MAAMC,mBAAmB,GAAG,OAAOC,SAAP,EAAkBC,eAAlB,KAAsC;AACrE,MAAIC,MAAJ;AAEA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AACxBC,IAAAA,KAAK,EAAG;AAChB;AACA;AACA;AACA;AACA;AANgC,GAAf,CAAb;AASA,MAAIC,OAAO,GAAG;AACV,cAAU,MADA;AAEV,WAAOT,gBAFG;AAGV,eAAW;AAAC,sBAAgB;AAAjB,KAHD;AAIV,YAAQK;AAJE,GAAd;AAQAD,EAAAA,MAAM,GAAG,MAAML,OAAO,CAACU,OAAD,EAAU,gBAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC7D,QAAID,KAAJ,EAAW;AACPP,MAAAA,eAAe,CAAC;AAAEO,QAAAA,KAAK,EAAE,IAAT;AAAeE,QAAAA,OAAO,EAAEF,KAAK,CAACE;AAA9B,OAAD,CAAf;AACA,YAAM,IAAIC,KAAJ,CAAUH,KAAV,CAAN;AACH;;AAAA;AACD,QAAII,IAAI,GAAGR,IAAI,CAACS,KAAL,CAAWJ,QAAQ,CAACG,IAApB,CAAX;;AAEA,QAAGA,IAAH,EAAQ;AACJ,UAAGA,IAAI,CAACT,IAAR,EAAa;AACT,YAAGS,IAAI,CAACT,IAAL,CAAUW,iBAAV,IAA+BF,IAAI,CAACT,IAAL,CAAUW,iBAAV,CAA4BC,MAA5B,GAAqC,CAAvE,EAAyE;AACrEf,UAAAA,SAAS,CAACY,IAAI,CAACT,IAAL,CAAUW,iBAAV,CAA4B,CAA5B,CAAD,CAAT;AACH;AACJ,OAJD,MAIO,IAAIF,IAAI,CAACI,MAAT,EAAiB;AACpBf,QAAAA,eAAe,CAAC;AACZO,UAAAA,KAAK,EAAE,IADK;AAEZE,UAAAA,OAAO,EAAEE,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeN;AAFZ,SAAD,CAAf;AAIH;AACJ,KAXD,MAWO;AACHT,MAAAA,eAAe,CAAC;AACZO,QAAAA,KAAK,EAAE,IADK;AAEZE,QAAAA,OAAO,EAAE;AAFG,OAAD,CAAf;AAIH;AACJ,GAxBqB,CAAtB;AA0BH,CA9CM","sourcesContent":["import request from 'request'\nimport {SUBGRAPH_API_URL} from '../../utility/constants'\n\n\nexport const getGlobalPoolDetail = async (onSuccess, onErrorCallback) => {\n    let result;\n\n    const data = JSON.stringify({\n        query: `{\n            globalPoolDetails {\n              collectionPeriod\n              matchCollateralRatioInterval\n            }\n        }`\n    })\n\n    var options = {\n        'method': 'POST',\n        'url': SUBGRAPH_API_URL,\n        'headers': {'Content-Type': 'application/json'},\n        'body': data\n    }       \n\n\n    result = await request(options, async function (error, response) {\n        if (error) {\n            onErrorCallback({ error: true, message: error.message });\n            throw new Error(error)\n        };\n        var body = JSON.parse(response.body)\n\n        if(body){\n            if(body.data){\n                if(body.data.globalPoolDetails && body.data.globalPoolDetails.length > 0){\n                    onSuccess(body.data.globalPoolDetails[0])\n                }\n            } else if (body.errors) {\n                onErrorCallback({\n                    error: true,\n                    message: body.errors[0].message\n                });\n            }\n        } else {\n            onErrorCallback({\n                error: true,\n                message: 'No pool detail available.'\n            });\n        }\n    })\n    \n};"]},"metadata":{},"sourceType":"module"}