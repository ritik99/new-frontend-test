{"ast":null,"code":"var _jsxFileName = \"/Users/ritikdutta/Desktop/sublime-frontend/src/components/pages/Profile/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Header from '../../uiElements/Header';\nimport Footer from '../../uiElements/Footer';\nimport { useHistory } from 'react-router-dom';\nimport ProfileTabs from '../../uiElements/Tabs/ProfileTabs';\nimport './style.css';\nimport request from 'request';\nimport { borrowPools } from './../../../query/pool/borrowingPools';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FVerify(tUsername) {\n  if (tUsername == \"Verify Now\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twitterVerifiedLine2\",\n      children: \"Unverified\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twitterVerifiedLine2\",\n      children: \"Verified\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_c = FVerify;\n\nfunction IsVerified(props) {\n  const data = JSON.stringify({\n    query: `{\n            twitterDetails(where:{id:\"${window.sessionStorage.getItem(\"address\")}\"}) {\n              id\n                  twitterId\n            }\n          }          \n          `\n  });\n  var options = {\n    'method': 'POST',\n    'url': 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    'headers': {\n      'Content-Type': 'application/json'\n    },\n    'body': data\n  };\n  console.log('hey');\n  var result = request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n\n    if (body.data.twitterDetails.length != 0) {\n      let name = 'user name';\n\n      try {\n        name = ethers.utils.parseBytes32String(body.data.twitterDetails[0].twitterId);\n      } catch (error) {}\n\n      props.setTUsername(name); // return \"Doing it\"\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"twitterVerifiedLineButton\",\n    onClick: () => props.verifyTwitter('data'),\n    children: props.tUsername\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = IsVerified;\nexport default function Profile() {\n  _s();\n\n  const address = window.sessionStorage.getItem(\"address\");\n  const [poolBorrowData, setpoolBorrowData] = useState([]);\n  const history = useHistory();\n\n  if (address == \"0x00000000\") {\n    history.push('/');\n  }\n\n  if (address == null || address == '0x0000000000') {\n    history.push('/');\n  }\n\n  const shortAddress = address.slice(0, 6) + '...' + address.slice(36, 42);\n  const userData = {\n    address: shortAddress,\n    verified: false\n  };\n  const [tUsername, setTUsername] = useState(\"Verify Now\");\n  const [isLoading, setIsLoading] = useState(false); //Hide Loading Screen setIsLoading(false);\n\n  useEffect(() => {\n    borrowPools(address, setpoolBorrowData);\n  }, []);\n  console.log(poolBorrowData); // const borrowData = [\n  //     {\n  //         id: 1,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Active',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '45%',\n  //         next_payment: '200 DOT',\n  //         ends_date: '2d 12h 34m',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 2,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Grace Period',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '55%',\n  //         next_payment: '200 DOT',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 3,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Collecting',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 4,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Closed',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 5,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Defaulted',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 6,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Cancelled',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  //     {\n  //         id: 7,\n  //         avatar: '',\n  //         name: 'Ritik Dutta',\n  //         username: '@ritikdutta',\n  //         pool_type: 'Open Borrow',\n  //         pool_status: 'Terminated',\n  //         created_on: '18th Jan 2021',\n  //         borrow_rate: '11%',\n  //         borrowed_amount: '1,000 DOT',\n  //         progress_and_payment_txt: 'Collection Progress',\n  //         progress_and_payment: '100%',\n  //         ends_date: '30th Jan 2021',\n  //         btn_1: 'Provide collateral',\n  //         btn_2: 'View More',\n  //     },\n  // ];\n\n  const verifyTwitter = data => {\n    alert(\"Verify Twitter Operation\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageOuter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pageWrapper pageWrapperPadding\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileLelfPart\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileLelfPartLine profileLelfPartLine1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileUserIcon\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"profileUserVerifiedBadge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profileUserAddress\",\n              children: userData.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profileLelfPartLine\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twitterVerified\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"twitterVerifiedLelft\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"twitterVerifiedLine1\",\n                  children: \"Twitter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FVerify, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IsVerified, {\n                tUsername: tUsername,\n                setTUsername: setTUsername,\n                verifyTwitter: verifyTwitter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profileRightPart\",\n          children: /*#__PURE__*/_jsxDEV(ProfileTabs, {\n            borrowData: poolBorrowData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"+FJbS0XAJMEPE3UutDvykZeuHY0=\", false, function () {\n  return [useHistory];\n});\n\n_c3 = Profile;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FVerify\");\n$RefreshReg$(_c2, \"IsVerified\");\n$RefreshReg$(_c3, \"Profile\");","map":{"version":3,"sources":["/Users/ritikdutta/Desktop/sublime-frontend/src/components/pages/Profile/index.js"],"names":["React","useState","useEffect","Header","Footer","useHistory","ProfileTabs","request","borrowPools","ethers","FVerify","tUsername","IsVerified","props","data","JSON","stringify","query","window","sessionStorage","getItem","options","console","log","result","error","response","Error","body","parse","twitterDetails","length","name","utils","parseBytes32String","twitterId","setTUsername","verifyTwitter","Profile","address","poolBorrowData","setpoolBorrowData","history","push","shortAddress","slice","userData","verified","isLoading","setIsLoading","alert"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState,useEffect} from 'react'\nimport Header from '../../uiElements/Header'\nimport Footer from '../../uiElements/Footer'\nimport { useHistory } from 'react-router-dom'\nimport ProfileTabs from '../../uiElements/Tabs/ProfileTabs'\nimport './style.css'\nimport request from 'request'\nimport {borrowPools} from './../../../query/pool/borrowingPools'\nimport {ethers} from 'ethers'\n\nfunction FVerify(tUsername){\n    if(tUsername==\"Verify Now\"){\n        return <div className=\"twitterVerifiedLine2\">\n                Unverified\n            </div>\n    }\n    else{\n        return <div className=\"twitterVerifiedLine2\">\n                Verified\n            </div>\n    }\n}\n\nfunction IsVerified(props) {\n    const data = JSON.stringify({\n        query: `{\n            twitterDetails(where:{id:\"${window.sessionStorage.getItem(\"address\")}\"}) {\n              id\n                  twitterId\n            }\n          }          \n          `, \n    })\n\n\n    var options = {\n        'method': 'POST',\n        'url': 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n        'headers': {'Content-Type': 'application/json'},\n        'body': data\n    }\n    console.log('hey')\n    var result = request(options, async function (error, response) {\n        if (error) throw new Error(error); \n        var body = JSON.parse(response.body)\n        if (body.data.twitterDetails.length != 0){\n            let name = 'user name'\n            try {\n                name = ethers.utils.parseBytes32String(body.data.twitterDetails[0].twitterId)\n            } catch (error) {}\n            props.setTUsername(name)\n            // return \"Doing it\"\n        }\n    })\n    return <div className=\"twitterVerifiedLineButton\" onClick={() => props.verifyTwitter('data') }>\n                {props.tUsername}\n            </div>    \n}\n\nexport default function Profile() {\n\n\n    const address = window.sessionStorage.getItem(\"address\");\n    const [poolBorrowData,setpoolBorrowData] = useState([])\n    const history = useHistory();\n    if(address == \"0x00000000\"){\n        history.push('/')\n    }\n    if(address == null || address == '0x0000000000'){\n        history.push('/')\n    }\n\n    const shortAddress = address.slice(0,6)+'...'+address.slice(36,42)\n\n\n    const userData = {\n        address: shortAddress,\n        verified: false\n    }\n\n    const[tUsername, setTUsername] = useState(\"Verify Now\")\n    const [isLoading, setIsLoading] = useState(false);\n\n\n   //Hide Loading Screen setIsLoading(false);\n\n \n   useEffect(() => {\n        borrowPools(address,setpoolBorrowData)\n    },[]);\n    console.log(poolBorrowData);\n\n\n    // const borrowData = [\n    //     {\n    //         id: 1,\n    //         avatar: '',\n    //         name: 'Ritik Dutta',\n    //         username: '@ritikdutta',\n    //         pool_type: 'Open Borrow',\n    //         pool_status: 'Active',\n    //         created_on: '18th Jan 2021',\n    //         borrow_rate: '11%',\n    //         borrowed_amount: '1,000 DOT',\n    //         progress_and_payment_txt: 'Collection Progress',\n    //         progress_and_payment: '45%',\n    //         next_payment: '200 DOT',\n    //         ends_date: '2d 12h 34m',\n    //         btn_1: 'Provide collateral',\n    //         btn_2: 'View More',\n    //     },\n    //     {\n    //         id: 2,\n    //         avatar: '',\n    //         name: 'Ritik Dutta',\n    //         username: '@ritikdutta',\n    //         pool_type: 'Open Borrow',\n    //         pool_status: 'Grace Period',\n    //         created_on: '18th Jan 2021',\n    //         borrow_rate: '11%',\n    //         borrowed_amount: '1,000 DOT',\n    //         progress_and_payment_txt: 'Collection Progress',\n    //         progress_and_payment: '55%',\n    //         next_payment: '200 DOT',\n    //         ends_date: '30th Jan 2021',\n    //         btn_1: 'Provide collateral',\n    //         btn_2: 'View More',\n    //     },\n    //     {\n    //         id: 3,\n    //         avatar: '',\n    //         name: 'Ritik Dutta',\n    //         username: '@ritikdutta',\n    //         pool_type: 'Open Borrow',\n    //         pool_status: 'Collecting',\n    //         created_on: '18th Jan 2021',\n    //         borrow_rate: '11%',\n    //         borrowed_amount: '1,000 DOT',\n    //         progress_and_payment_txt: 'Collection Progress',\n    //         progress_and_payment: '100%',\n    //         ends_date: '30th Jan 2021',\n    //         btn_1: 'Provide collateral',\n    //         btn_2: 'View More',\n    //     },\n    //     {\n    //         id: 4,\n    //         avatar: '',\n    //         name: 'Ritik Dutta',\n    //         username: '@ritikdutta',\n    //         pool_type: 'Open Borrow',\n    //         pool_status: 'Closed',\n    //         created_on: '18th Jan 2021',\n    //         borrow_rate: '11%',\n    //         borrowed_amount: '1,000 DOT',\n    //         progress_and_payment_txt: 'Collection Progress',\n    //         progress_and_payment: '100%',\n    //         ends_date: '30th Jan 2021',\n    //         btn_1: 'Provide collateral',\n    //         btn_2: 'View More',\n    //     },\n    //     {\n    //         id: 5,\n    //         avatar: '',\n    //         name: 'Ritik Dutta',\n    //         username: '@ritikdutta',\n    //         pool_type: 'Open Borrow',\n    //         pool_status: 'Defaulted',\n    //         created_on: '18th Jan 2021',\n    //         borrow_rate: '11%',\n    //         borrowed_amount: '1,000 DOT',\n    //         progress_and_payment_txt: 'Collection Progress',\n    //         progress_and_payment: '100%',\n    //         ends_date: '30th Jan 2021',\n    //         btn_1: 'Provide collateral',\n    //         btn_2: 'View More',\n    //     },\n    //     {\n    //         id: 6,\n    //         avatar: '',\n    //         name: 'Ritik Dutta',\n    //         username: '@ritikdutta',\n    //         pool_type: 'Open Borrow',\n    //         pool_status: 'Cancelled',\n    //         created_on: '18th Jan 2021',\n    //         borrow_rate: '11%',\n    //         borrowed_amount: '1,000 DOT',\n    //         progress_and_payment_txt: 'Collection Progress',\n    //         progress_and_payment: '100%',\n    //         ends_date: '30th Jan 2021',\n    //         btn_1: 'Provide collateral',\n    //         btn_2: 'View More',\n    //     },\n    //     {\n    //         id: 7,\n    //         avatar: '',\n    //         name: 'Ritik Dutta',\n    //         username: '@ritikdutta',\n    //         pool_type: 'Open Borrow',\n    //         pool_status: 'Terminated',\n    //         created_on: '18th Jan 2021',\n    //         borrow_rate: '11%',\n    //         borrowed_amount: '1,000 DOT',\n    //         progress_and_payment_txt: 'Collection Progress',\n    //         progress_and_payment: '100%',\n    //         ends_date: '30th Jan 2021',\n    //         btn_1: 'Provide collateral',\n    //         btn_2: 'View More',\n    //     },\n    // ];\n\n\n    const verifyTwitter = (data) => {\n        alert(\"Verify Twitter Operation\")\n    }\n\n    return (\n        <React.Fragment>\n             <Header isLoading={isLoading} />\n            <div className=\"pageOuter\">\n                <div className=\"pageWrapper pageWrapperPadding\">\n\n                    <div className=\"profileLelfPart\">\n\n                        <div className=\"profileLelfPartLine profileLelfPartLine1\">\n\n                            <div className=\"profileUserIcon\">\n                                <div className=\"profileUserVerifiedBadge\">\n                                </div>\n                            </div>\n\n                            <div className=\"profileUserAddress\">\n                                {userData.address}\n                            </div>\n\n                        </div>\n\n                        <div className=\"profileLelfPartLine\">\n\n                            <div className=\"twitterVerified\">\n                                <div className=\"twitterVerifiedLelft\">\n                                    <div className=\"twitterVerifiedLine1\">\n                                        Twitter\n                                    </div>\n                                    <FVerify>\n                                    </FVerify>\n                                    {/* <div className=\"twitterVerifiedLine2\">\n                                        Unverified\n                                    </div> */}\n                                </div>\n                                <IsVerified tUsername = {tUsername} setTUsername = {setTUsername} verifyTwitter={verifyTwitter}/>\n                                {/* <div className=\"twitterVerifiedLineButton\" onClick={() => verifyTwitter('data') }>\n                                    Verify now\n                                </div> */}\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                    <div className=\"profileRightPart\">\n\n                        <ProfileTabs borrowData={poolBorrowData}/>\n                        \n                    </div>\n\n                </div>\n            </div>\n            <Footer />\n        </React.Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}