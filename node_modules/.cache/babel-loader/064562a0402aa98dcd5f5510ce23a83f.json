{"ast":null,"code":"var _jsxFileName = \"/Users/ritikdutta/Desktop/sublime-frontend/src/components/uiElements/Header/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './style.css';\nimport { useHistory } from 'react-router-dom';\nimport LoadingScreen from '../LoadingScreen';\nimport TwitterModal from '../TwitterModal';\nimport { twitterDetails } from '../../../utility/subgraph/queries';\nimport { detectAccountChange, getActiveAccount } from '../../../utility/account/account';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction fVerify(tUsername, setShowTwitterModal) {\n  if (tUsername == 'Get Verified') setShowTwitterModal(true);\n}\n\nfunction IsVerified(props) {\n  twitterDetails(getActiveAccount('metamask')).then(twitterInfo => {\n    if (twitterInfo) {\n      props.setTUsername(twitterInfo.twitterId);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"headerVerifyButton button\",\n    onClick: () => fVerify(props.tUsername, props.setShowTwitterModal),\n    children: props.tUsername\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = IsVerified;\n\nfunction getShortAddr(walletAddr, history) {\n  if ((walletAddr === null || walletAddr === void 0 ? void 0 : walletAddr.length) == 42) {\n    return walletAddr.slice(0, 6) + '...' + walletAddr.slice(36, 42);\n  }\n\n  history.push('/');\n}\n\nexport default function Header({\n  isLoading\n}) {\n  _s();\n\n  const [walletAddr, setWalletAddr] = useState(getActiveAccount('metamask')); // const[url, seturl] = useState(window.location.href)\n\n  const [tUsername, setTUsername] = useState('Get Verified');\n  detectAccountChange('metamask', account => {\n    setWalletAddr(account);\n  }); // console.log(url)\n\n  let twitterModal = false;\n  var webUrl = new URL(window.location.href);\n  var username = webUrl.searchParams.get('username');\n\n  if (username != null) {\n    twitterModal = true;\n  }\n\n  const [showTwitterModal, setShowTwitterModal] = useState(twitterModal);\n\n  const closeTwitterModal = () => {\n    setShowTwitterModal(false);\n  };\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TwitterModal, {\n      showTwitterModal: showTwitterModal,\n      closeTwitterModal: closeTwitterModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingScreen, {\n      active: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerLogo icon\",\n          onClick: () => {\n            history.push('/dashboard');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerMenu\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: history.location.pathname === '/dashboard' ? 'headerMenuItemActive' : 'headerMenuItem',\n            onClick: () => {\n              history.push('/dashboard');\n            },\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: history.location.pathname === '/borrow' ? 'headerMenuItemActive' : 'headerMenuItem',\n            onClick: () => {\n              history.push('/borrow');\n            },\n            children: \"Borrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: history.location.pathname === '/lend' ? 'headerMenuItemActive' : 'headerMenuItem',\n            onClick: () => {\n              history.push('/lend');\n            },\n            children: \"Lend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: history.location.pathname === '/profile' ? 'headerMenuItemActive' : 'headerMenuItem',\n            onClick: () => {\n              history.push('/profile');\n            },\n            children: \"Your Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IsVerified, {\n          setShowTwitterModal: setShowTwitterModal,\n          tUsername: tUsername,\n          setTUsername: setTUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerAddr\",\n          children: getShortAddr(walletAddr, history)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"wF5VyGsOS5iMYXMfBhk5ppuRY9Y=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IsVerified\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"sources":["/Users/ritikdutta/Desktop/sublime-frontend/src/components/uiElements/Header/index.js"],"names":["React","useState","useHistory","LoadingScreen","TwitterModal","twitterDetails","detectAccountChange","getActiveAccount","fVerify","tUsername","setShowTwitterModal","IsVerified","props","then","twitterInfo","setTUsername","twitterId","getShortAddr","walletAddr","history","length","slice","push","Header","isLoading","setWalletAddr","account","twitterModal","webUrl","URL","window","location","href","username","searchParams","get","showTwitterModal","closeTwitterModal","pathname"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport './style.css';\nimport { useHistory } from 'react-router-dom';\nimport LoadingScreen from '../LoadingScreen';\nimport TwitterModal from '../TwitterModal';\nimport { twitterDetails } from '../../../utility/subgraph/queries';\nimport { detectAccountChange, getActiveAccount } from '../../../utility/account/account';\n\nfunction fVerify(tUsername, setShowTwitterModal) {\n  if (tUsername == 'Get Verified') setShowTwitterModal(true);\n}\n\nfunction IsVerified(props) {\n  twitterDetails(getActiveAccount('metamask')).then((twitterInfo) => {\n    if (twitterInfo) {\n      props.setTUsername(twitterInfo.twitterId);\n    }\n  });\n\n  return (\n    <div className=\"headerVerifyButton button\" onClick={() => fVerify(props.tUsername, props.setShowTwitterModal)}>\n      {props.tUsername}\n    </div>\n  );\n}\n\nfunction getShortAddr(walletAddr, history) {\n  if (walletAddr?.length == 42) {\n    return walletAddr.slice(0, 6) + '...' + walletAddr.slice(36, 42);\n  }\n  history.push('/');\n}\n\nexport default function Header({ isLoading }) {\n  const [walletAddr, setWalletAddr] = useState(getActiveAccount('metamask'));\n\n  // const[url, seturl] = useState(window.location.href)\n  const [tUsername, setTUsername] = useState('Get Verified');\n\n  detectAccountChange('metamask', (account) => {\n    setWalletAddr(account);\n  });\n\n  // console.log(url)\n\n  let twitterModal = false;\n\n  var webUrl = new URL(window.location.href);\n  var username = webUrl.searchParams.get('username');\n\n  if (username != null) {\n    twitterModal = true;\n  }\n\n  const [showTwitterModal, setShowTwitterModal] = useState(twitterModal);\n\n  const closeTwitterModal = () => {\n    setShowTwitterModal(false);\n  };\n\n  const history = useHistory();\n\n  return (\n    <React.Fragment>\n      <TwitterModal showTwitterModal={showTwitterModal} closeTwitterModal={closeTwitterModal} />\n\n      <LoadingScreen active={isLoading} />\n\n      <div className=\"header\">\n        <div className=\"headerWrapper\">\n          <div\n            className=\"headerLogo icon\"\n            onClick={() => {\n              history.push('/dashboard');\n            }}\n          ></div>\n\n          <div className=\"headerMenu\">\n            <div\n              className={history.location.pathname === '/dashboard' ? 'headerMenuItemActive' : 'headerMenuItem'}\n              onClick={() => {\n                history.push('/dashboard');\n              }}\n            >\n              Dashboard\n            </div>\n\n            <div\n              className={history.location.pathname === '/borrow' ? 'headerMenuItemActive' : 'headerMenuItem'}\n              onClick={() => {\n                history.push('/borrow');\n              }}\n            >\n              Borrow\n            </div>\n\n            <div\n              className={history.location.pathname === '/lend' ? 'headerMenuItemActive' : 'headerMenuItem'}\n              onClick={() => {\n                history.push('/lend');\n              }}\n            >\n              Lend\n            </div>\n\n            <div\n              className={history.location.pathname === '/profile' ? 'headerMenuItemActive' : 'headerMenuItem'}\n              onClick={() => {\n                history.push('/profile');\n              }}\n            >\n              Your Profile\n            </div>\n          </div>\n          <IsVerified setShowTwitterModal={setShowTwitterModal} tUsername={tUsername} setTUsername={setTUsername} />\n\n          <div className=\"headerAddr\">{getShortAddr(walletAddr, history)}</div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}