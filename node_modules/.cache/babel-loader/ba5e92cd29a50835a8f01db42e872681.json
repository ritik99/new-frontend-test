{"ast":null,"code":"var _jsxFileName = \"/Users/ritikdutta/Desktop/sublime-frontend/src/components/uiElements/Header/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport './style.css';\nimport { useHistory } from 'react-router-dom';\nimport LoadingScreen from '../LoadingScreen';\nimport TwitterModal from '../TwitterModal';\nimport { twitterDetails } from '../../../utility/subgraph/queries';\nimport { detectAccountChange, getActiveAccount } from \"../../../utility/account/account\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction fVerify(tUsername, setShowTwitterModal) {\n  if (tUsername == \"Get Verified\") setShowTwitterModal(true);\n}\n\nfunction IsVerified(props) {\n  twitterDetails(getActiveAccount(\"metamask\")).then(twitterInfo => {\n    console.log(twitterInfo);\n\n    if (twitterInfo) {\n      props.setTUsername(twitterInfo.twitterId);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"headerVerifyButton button\",\n    onClick: () => fVerify(props.tUsername, props.setShowTwitterModal),\n    children: props.tUsername\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n}\n\n_c = IsVerified;\n\nfunction getShortAddr(walletAddr, history) {\n  console.log(walletAddr);\n\n  if ((walletAddr === null || walletAddr === void 0 ? void 0 : walletAddr.length) == 42) {\n    return walletAddr.slice(0, 6) + '...' + walletAddr.slice(36, 42);\n  }\n\n  history.push(\"/\");\n}\n\nexport default function Header({\n  isLoading\n}) {\n  _s();\n\n  const [walletAddr, setWalletAddr] = useState(getActiveAccount(\"metamask\")); // const[url, seturl] = useState(window.location.href)\n\n  const [tUsername, setTUsername] = useState(\"Get Verified\");\n  detectAccountChange(\"metamask\", account => {\n    setWalletAddr(account);\n  }); // console.log(url)\n\n  let twitterModal = false;\n  var webUrl = new URL(window.location.href);\n  var username = webUrl.searchParams.get(\"username\");\n\n  if (username != null) {\n    twitterModal = true;\n  }\n\n  const [showTwitterModal, setShowTwitterModal] = useState(twitterModal);\n\n  const closeTwitterModal = () => {\n    setShowTwitterModal(false);\n  };\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TwitterModal, {\n      showTwitterModal: showTwitterModal,\n      closeTwitterModal: closeTwitterModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadingScreen, {\n      active: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerLogo icon\",\n          onClick: () => {\n            history.push('/dashboard');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerMenu\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: history.location.pathname === '/dashboard' ? \"headerMenuItemActive\" : \"headerMenuItem\",\n            onClick: () => {\n              history.push('/dashboard');\n            },\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: history.location.pathname === '/borrow' ? \"headerMenuItemActive\" : \"headerMenuItem\",\n            onClick: () => {\n              history.push('/borrow');\n            },\n            children: \"Borrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: history.location.pathname === '/lend' ? \"headerMenuItemActive\" : \"headerMenuItem\",\n            onClick: () => {\n              history.push('/lend');\n            },\n            children: \"Lend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: history.location.pathname === '/profile' ? \"headerMenuItemActive\" : \"headerMenuItem\",\n            onClick: () => {\n              history.push('/profile');\n            },\n            children: \"Your Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IsVerified, {\n          setShowTwitterModal: setShowTwitterModal,\n          tUsername: tUsername,\n          setTUsername: setTUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headerAddr\",\n          children: getShortAddr(walletAddr, history)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"rbZW70n7C1fbjWi0D1953YyAezk=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IsVerified\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"sources":["/Users/ritikdutta/Desktop/sublime-frontend/src/components/uiElements/Header/index.js"],"names":["React","useState","useHistory","LoadingScreen","TwitterModal","twitterDetails","detectAccountChange","getActiveAccount","fVerify","tUsername","setShowTwitterModal","IsVerified","props","then","twitterInfo","console","log","setTUsername","twitterId","getShortAddr","walletAddr","history","length","slice","push","Header","isLoading","setWalletAddr","account","twitterModal","webUrl","URL","window","location","href","username","searchParams","get","showTwitterModal","closeTwitterModal","pathname"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport './style.css'\nimport { useHistory } from 'react-router-dom'\nimport LoadingScreen from '../LoadingScreen'\nimport TwitterModal from '../TwitterModal'\nimport { twitterDetails } from '../../../utility/subgraph/queries';\nimport { detectAccountChange, getActiveAccount } from \"../../../utility/account/account\";\n\nfunction fVerify(tUsername, setShowTwitterModal){\n    if(tUsername==\"Get Verified\") setShowTwitterModal(true);\n}\n\nfunction IsVerified(props) {\n    twitterDetails(getActiveAccount(\"metamask\")).then((twitterInfo) => {\n        console.log(twitterInfo);\n        if(twitterInfo) {\n            props.setTUsername(twitterInfo.twitterId);\n        }\n    });\n\n    return  <div className=\"headerVerifyButton button\" onClick={() => fVerify(props.tUsername, props.setShowTwitterModal)}>\n                {props.tUsername}\n            </div>\n    \n}\n\nfunction getShortAddr(walletAddr, history) {\n    console.log(walletAddr);\n    if(walletAddr?.length == 42) {\n        return walletAddr.slice(0,6)+'...'+walletAddr.slice(36,42)\n    }\n    history.push(\"/\");\n}\n\nexport default function Header({isLoading}) {\n\n    const [walletAddr, setWalletAddr] = useState(getActiveAccount(\"metamask\"))\n    \n    // const[url, seturl] = useState(window.location.href)\n    const[tUsername, setTUsername] = useState(\"Get Verified\")\n\n    detectAccountChange(\"metamask\", (account) => {\n        setWalletAddr(account);\n    })\n\n    // console.log(url)\n\n    let twitterModal = false;\n\n    var webUrl = new URL(window.location.href);\n    var username = webUrl.searchParams.get(\"username\");\n\n    if(username != null){\n        twitterModal = true\n    }\n\n    const [showTwitterModal, setShowTwitterModal] = useState(twitterModal)\n\n    const closeTwitterModal = () => {\n        setShowTwitterModal(false)\n    }\n\n    const history = useHistory();\n\n    return (\n        <React.Fragment>\n            <TwitterModal showTwitterModal={showTwitterModal} closeTwitterModal={closeTwitterModal}  />\n            <LoadingScreen active={isLoading} />\n            <div className=\"header\">\n                <div className=\"headerWrapper\">\n                    <div className=\"headerLogo icon\" onClick={ () => { history.push('/dashboard') } }>\n                    </div>\n                    <div className=\"headerMenu\">\n                        <div className={ history.location.pathname === '/dashboard' ? \"headerMenuItemActive\" : \"headerMenuItem\" } onClick={ () => { history.push('/dashboard') } }>\n                            Dashboard\n                        </div>\n                        <div className={ history.location.pathname === '/borrow' ? \"headerMenuItemActive\" : \"headerMenuItem\" } onClick={ () => { history.push('/borrow') } }>\n                            Borrow\n                        </div>\n                        <div className={ history.location.pathname === '/lend' ? \"headerMenuItemActive\" : \"headerMenuItem\" } onClick={ () => { history.push('/lend') } }>\n                            Lend\n                        </div>\n                        <div className={ history.location.pathname === '/profile' ? \"headerMenuItemActive\" : \"headerMenuItem\" } onClick={ () => { history.push('/profile') } }>\n                            Your Profile\n                        </div>\n                    </div>\n                    <IsVerified setShowTwitterModal = {setShowTwitterModal} tUsername = {tUsername} setTUsername = {setTUsername}/>\n                    <div className=\"headerAddr\">\n                        { getShortAddr(walletAddr, history) }\n                    </div>  \n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}