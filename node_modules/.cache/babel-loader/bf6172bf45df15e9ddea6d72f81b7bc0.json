{"ast":null,"code":"import { ethers } from \"ethers\";\n\nconst poolContract = require(\"../abi/pool.json\");\n\nexport async function addCollateral(amount, address) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  console.log(amount, address);\n  let newAmount = (amount * 10 ** 18).toString();\n  var contract = new ethers.Contract(address, poolContract, provider);\n  let balance = await signer.getBalance();\n  contract = contract.connect(signer);\n  let borrower = await signer.getAddress();\n  const borrowerTransactionConfig = {\n    from: borrower,\n    gasPrice: \"1000000000\",\n    value: newAmount\n  };\n  await contract.functions.depositCollateral(newAmount, false, borrowerTransactionConfig).then(console.log);\n}","map":{"version":3,"sources":["/Users/ritikdutta/Desktop/sublime-frontend/src/contractTranscations/addCollateral.js"],"names":["ethers","poolContract","require","addCollateral","amount","address","provider","providers","Web3Provider","window","ethereum","signer","getSigner","console","log","newAmount","toString","contract","Contract","balance","getBalance","connect","borrower","getAddress","borrowerTransactionConfig","from","gasPrice","value","functions","depositCollateral","then"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;;AAGA,MAAMC,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AAGA,OAAO,eAAeC,aAAf,CAA6BC,MAA7B,EAAoCC,OAApC,EAA4C;AAEjD,QAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,QAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAT,EAAf;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ,EAAmBC,OAAnB;AAEA,MAAIU,SAAS,GAAG,CAACX,MAAM,GAAE,MAAI,EAAb,EAAkBY,QAAlB,EAAhB;AACA,MAAIC,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,QAAX,CAAoBb,OAApB,EAA6BJ,YAA7B,EAA2CK,QAA3C,CAAf;AAEA,MAAIa,OAAO,GAAG,MAAMR,MAAM,CAACS,UAAP,EAApB;AACAH,EAAAA,QAAQ,GAAGA,QAAQ,CAACI,OAAT,CAAiBV,MAAjB,CAAX;AACA,MAAIW,QAAQ,GAAG,MAAMX,MAAM,CAACY,UAAP,EAArB;AAEA,QAAMC,yBAAyB,GAAG;AAChCC,IAAAA,IAAI,EAACH,QAD2B;AAEhCI,IAAAA,QAAQ,EAAE,YAFsB;AAGhCC,IAAAA,KAAK,EAAEZ;AAHyB,GAAlC;AAKA,QAAME,QAAQ,CAACW,SAAT,CACLC,iBADK,CAEJd,SAFI,EAEM,KAFN,EAEYS,yBAFZ,EAGJM,IAHI,CAGCjB,OAAO,CAACC,GAHT,CAAN;AAKD","sourcesContent":["import { ethers } from \"ethers\";\n\n\nconst poolContract = require(\"../abi/pool.json\");\n\n\nexport async function addCollateral(amount,address){\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n\n  console.log(amount,address);\n\n  let newAmount = (amount*(10**18)).toString()\n  var contract = new ethers.Contract(address, poolContract, provider);\n\n  let balance = await signer.getBalance();\n  contract = contract.connect(signer);\n  let borrower = await signer.getAddress();\n\n  const borrowerTransactionConfig = {\n    from:borrower,\n    gasPrice: \"1000000000\",\n    value: newAmount,\n  }\n  await contract.functions\n  .depositCollateral(\n    newAmount,false,borrowerTransactionConfig\n  ).then(console.log);\n    \n}\n\n\n    \n"]},"metadata":{},"sourceType":"module"}