{"ast":null,"code":"var _jsxFileName = \"/Users/ritikdutta/Desktop/SUBLIME/sublime-frontend/src/components/pages/Access/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport './style.css';\nimport Web3 from 'web3';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Access() {\n  _s();\n\n  const history = useHistory();\n  const [walletAddr, setWalletAddr] = useState(localStorage.addr);\n  const [accessGranted, setAccessGranted] = useState(false);\n  const [metaConnected, setMetaConnected] = useState(false); //Metamask connection func\n\n  const loadWeb3 = () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      window.ethereum.enable().then(info => {\n        window.web3.eth.getAccounts().then(accounts => {\n          setWalletAddr(accounts[0]);\n          localStorage.setItem(\"addr\", accounts[0]);\n          setMetaConnected(true);\n          checkAccessGranted(accounts[0]);\n        });\n      });\n    } else {\n      alert(\"Please install Metamask\");\n    }\n  };\n\n  const checkAccessGranted = addr => {\n    if (addr) {\n      localStorage.setItem(\"accessGranted\", true);\n      setAccessGranted(true);\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.addr) {\n      setMetaConnected(true);\n      setWalletAddr(localStorage.addr);\n      checkAccessGranted(localStorage.addr);\n    }\n\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        if (accounts.length > 0) {\n          localStorage.setItem(\"addr\", accounts[0]);\n          setWalletAddr(accounts[0]);\n          setMetaConnected(true);\n          checkAccessGranted(accounts[0]);\n        } else {\n          setWalletAddr('');\n          setAccessGranted(false);\n          setMetaConnected(false);\n          localStorage.removeItem(\"addr\");\n          localStorage.removeItem(\"accessGranted\");\n        }\n      });\n    }\n\n    if (localStorage.accessGranted === true && localStorage.addr) {\n      history.push('/dashboard');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accessPage\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accessPageBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"accessPageBoxLogo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: metaConnected ? accessGranted ? 'accessConnectButton button accessConnectButtonGreen' : 'accessConnectButton button accessConnectButtonOrange' : 'accessConnectButton button',\n          onClick: () => loadWeb3(),\n          children: metaConnected ? accessGranted ? 'Access Granted' : 'You donâ€™t have access' : 'Connect Metamask'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: accessGranted ? \"enterAppButton button\" : \"enterAppButton button buttonInactive\",\n          onClick: () => history.push('/dashboard'),\n          children: \"Enter App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: accessGranted || !metaConnected ? \"requestAccessButton button buttonInactive\" : \"requestAccessButton button\",\n          onClick: () => history.push('/requestaccess'),\n          children: \"Request Access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Access, \"9rm+4Q3qktHE2djRFubD578nrlo=\", false, function () {\n  return [useHistory];\n});\n\n_c = Access;\n\nvar _c;\n\n$RefreshReg$(_c, \"Access\");","map":{"version":3,"sources":["/Users/ritikdutta/Desktop/SUBLIME/sublime-frontend/src/components/pages/Access/index.js"],"names":["React","useEffect","useState","Web3","useHistory","Access","history","walletAddr","setWalletAddr","localStorage","addr","accessGranted","setAccessGranted","metaConnected","setMetaConnected","loadWeb3","window","ethereum","web3","enable","then","info","eth","getAccounts","accounts","setItem","checkAccessGranted","alert","on","length","removeItem","push"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useEffect, useState} from 'react'\nimport './style.css'\nimport Web3 from 'web3'\nimport { useHistory } from 'react-router-dom'\n\nexport default function Access() {\n\n    const history = useHistory()\n\n    const [walletAddr, setWalletAddr] = useState(localStorage.addr)\n    const [accessGranted, setAccessGranted] = useState(false)\n    const [metaConnected, setMetaConnected] = useState(false)\n\n     //Metamask connection func\n     const loadWeb3 = () => {\n        if(window.ethereum){\n            window.web3 = new Web3(window.ethereum)\n            window.ethereum.enable()\n                .then(info => {\n                    window.web3.eth.getAccounts()\n                        .then(accounts => {\n                            setWalletAddr(accounts[0])\n                            localStorage.setItem(\"addr\", accounts[0])\n                            setMetaConnected(true)\n                            checkAccessGranted(accounts[0])\n                })\n            })\n        }else{\n            alert(\"Please install Metamask\")\n        }\n    }\n\n    const checkAccessGranted = (addr) => {\n        if(addr){\n            localStorage.setItem(\"accessGranted\", true)\n            setAccessGranted(true)\n        }\n    }\n\n\n\n    useEffect(() => {\n        \n        if(localStorage.addr){\n            setMetaConnected(true)\n            setWalletAddr(localStorage.addr)\n            checkAccessGranted(localStorage.addr)\n        }\n\n        if(window.ethereum){\n            window.ethereum.on(\"accountsChanged\", accounts => {\n                if (accounts.length > 0){\n                  localStorage.setItem(\"addr\", accounts[0])\n                  setWalletAddr(accounts[0])\n                  setMetaConnected(true)\n                  checkAccessGranted(accounts[0])\n                }else{\n                  setWalletAddr('')\n                  setAccessGranted(false)\n                  setMetaConnected(false)\n                  localStorage.removeItem(\"addr\");\n                  localStorage.removeItem(\"accessGranted\")\n                }\n              });\n        }\n\n        if(localStorage.accessGranted === true && localStorage.addr){\n            history.push('/dashboard')\n        }\n\n    }, []);\n\n\n\n    return (\n        <React.Fragment>\n            \n            <div className=\"accessPage\">\n                            <div className=\"accessPageBox\">\n                                <div className=\"accessPageBoxLogo\">\n                                \n                                </div>\n                               \n                                <div className={ metaConnected ? accessGranted ? 'accessConnectButton button accessConnectButtonGreen' : 'accessConnectButton button accessConnectButtonOrange' : 'accessConnectButton button' } onClick={() => loadWeb3()}>\n                                    {metaConnected ? accessGranted ? 'Access Granted' : 'You donâ€™t have access' :  'Connect Metamask' }\n                                </div>\n                                <div className={accessGranted ? \"enterAppButton button\" : \"enterAppButton button buttonInactive\"} onClick={()=>history.push('/dashboard')}>\n                                    Enter App\n                                </div>\n                                <div className={accessGranted || !metaConnected ? \"requestAccessButton button buttonInactive\" : \"requestAccessButton button\"} onClick={()=>history.push('/requestaccess')}>\n                                    Request Access\n                                </div>\n                               \n                            </div>\n                        </div>\n\n\n        </React.Fragment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}