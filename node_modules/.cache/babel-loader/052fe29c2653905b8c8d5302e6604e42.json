{"ast":null,"code":"import request from 'request'; // const Web3 = require(\"web3\");\n\nimport Web3 from 'web3';\nconst web3 = new Web3('https://kovan.infura.io/v3/9dc997986f8840daa0e6ccb1d8d0d757');\nconst aggregatorV3InterfaceABI = [{\n  inputs: [],\n  name: 'decimals',\n  outputs: [{\n    internalType: 'uint8',\n    name: '',\n    type: 'uint8'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [],\n  name: 'description',\n  outputs: [{\n    internalType: 'string',\n    name: '',\n    type: 'string'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    internalType: 'uint80',\n    name: '_roundId',\n    type: 'uint80'\n  }],\n  name: 'getRoundData',\n  outputs: [{\n    internalType: 'uint80',\n    name: 'roundId',\n    type: 'uint80'\n  }, {\n    internalType: 'int256',\n    name: 'answer',\n    type: 'int256'\n  }, {\n    internalType: 'uint256',\n    name: 'startedAt',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'updatedAt',\n    type: 'uint256'\n  }, {\n    internalType: 'uint80',\n    name: 'answeredInRound',\n    type: 'uint80'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [],\n  name: 'latestRoundData',\n  outputs: [{\n    internalType: 'uint80',\n    name: 'roundId',\n    type: 'uint80'\n  }, {\n    internalType: 'int256',\n    name: 'answer',\n    type: 'int256'\n  }, {\n    internalType: 'uint256',\n    name: 'startedAt',\n    type: 'uint256'\n  }, {\n    internalType: 'uint256',\n    name: 'updatedAt',\n    type: 'uint256'\n  }, {\n    internalType: 'uint80',\n    name: 'answeredInRound',\n    type: 'uint80'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [],\n  name: 'version',\n  outputs: [{\n    internalType: 'uint256',\n    name: '',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}]; // const request = require('request')\n\nexport function getTotalBorrowedAmount(address, setTotalBorrowAmount) {\n  const data = JSON.stringify({\n    query: `{\n            pools(where:{borrower:\"${address}\",loanStatus:\"Active\"}) {\n              id\n              borrowAmountRequested\n              borrowAsset\n              \n            }\n          } \n          `\n  });\n  var options = {\n    method: 'POST',\n    url: 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: data\n  };\n  request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    let totalBorrow = 0;\n\n    if (body) {\n      if (body.data) {\n        if (body.data.pools && body.data.pools.length > 0) {\n          for (var pool = 0; pool < body.data.pools.length; pool++) {\n            let addr;\n\n            if (body.data.pools[pool].borrowAsset = '0x0000000000000000000000000000000000000000') {\n              addr = '0x9326BFA02ADD2366b30bacB125260Af641031331';\n            }\n\n            const priceFeed = new web3.eth.Contract(aggregatorV3InterfaceABI, addr);\n            let roundData = (await priceFeed.methods.latestRoundData().call()).answer / 10 ** 8;\n            console.log(roundData);\n            totalBorrow += roundData * (parseInt(body.data.pools[pool].borrowAmountRequested) / 10 ** 18);\n          }\n        }\n      }\n    }\n\n    setTotalBorrowAmount(totalBorrow);\n  });\n}\nexport function getBorrowRate(address, setTotalBorrowRate) {\n  const data = JSON.stringify({\n    query: `{\n            pools(where:{borrower:\"${address}\",loanStatus:\"Active\"}) {\n                borrowRate\n            }\n          } \n          `\n  });\n  var options = {\n    method: 'POST',\n    url: 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: data\n  };\n  request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    let totalBorrowRate = 0;\n\n    if (body) {\n      if (body.data) {\n        if (body.data.pools && body.data.pools.length > 0) {\n          for (var pool = 0; pool < body.data.pools.length; pool++) {\n            totalBorrowRate = totalBorrowRate + parseInt(body.data.pools[pool].borrowRate);\n          }\n\n          if (body.data.pools.length == 0) {\n            setTotalBorrowRate(0);\n          } else {\n            setTotalBorrowRate(totalBorrowRate / body.data.pools.length);\n          }\n        }\n      }\n    } // console.log(totalBorrowRate,body.data.pools.length);\n\n  });\n}\nexport function getTotalLendAmount(address, setTotalLendAmount) {\n  console.log('working');\n  const data = JSON.stringify({\n    query: `{\n            lendingDetailscopies(where:{lender:\"${address}\",loanStatus:\"Active\"}){\n             id\n             AmountLend\n             pool{\n                borrowAsset\n              }\n           }\n           }            \n          `\n  });\n  var options = {\n    method: 'POST',\n    url: 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: data\n  };\n  request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    let totalLend = 0;\n\n    if (body) {\n      if (body.data) {\n        console.log(body.data);\n\n        if (body.data.lendingDetailscopies && body.data.lendingDetailscopies.length > 0) {\n          for (var i = 0; i < body.data.lendingDetailscopies.length; i++) {\n            let addr;\n\n            if (body.data.lendingDetailscopies[i].pool.borrowAsset = '0x0000000000000000000000000000000000000000') {\n              addr = '0x9326BFA02ADD2366b30bacB125260Af641031331';\n            }\n\n            const priceFeed = new web3.eth.Contract(aggregatorV3InterfaceABI, addr);\n            let roundData = (await priceFeed.methods.latestRoundData().call()).answer / 10 ** 8;\n            totalLend += roundData * (parseInt(body.data.lendingDetailscopies[i].AmountLend) / 10 ** 18);\n          }\n\n          if (body.data.lendingDetailscopies.length == 0) {\n            setTotalLendAmount(0);\n          } else {\n            setTotalLendAmount(totalLend);\n          }\n        }\n      }\n    }\n  });\n}\nexport function getLendRate(address, setTotalLendRate) {\n  const data = JSON.stringify({\n    query: `{\n            pools(where:{borrower:\"${address}\",loanStatus:\"Active\"}) {\n                borrowRate\n            }\n          } \n          `\n  });\n  var options = {\n    method: 'POST',\n    url: 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: data\n  };\n  let s = 0;\n  request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    let totalBorrowRate = 0;\n\n    if (body) {\n      if (body.data) {\n        if (body.data.pools && body.data.pools.length > 0) {\n          for (var pool = 0; pool < body.data.pools.length; pool++) {\n            totalBorrowRate = totalBorrowRate + parseInt(body.data.pools[pool].borrowRate);\n          }\n\n          if (body.data.pools.length == 0) {\n            setTotalLendRate(0);\n          } else {\n            setTotalLendRate((1 - s) * totalBorrowRate / body.data.pools.length);\n          }\n        }\n      }\n    } // console.log(totalBorrowRate,body.data.pools.length);\n\n  });\n} // getTotalBorrowedAmount(\"0x5a8043a7907c3a5c40ae52cff3abc026111ccd96\")\n// getBorrowRate(\"0x5a8043a7907c3a5c40ae52cff3abc026111ccd96\")","map":{"version":3,"sources":["/Users/ritikdutta/Desktop/SUBLIME/sublime-frontend/src/utility/dashboard.js"],"names":["request","Web3","web3","aggregatorV3InterfaceABI","inputs","name","outputs","internalType","type","stateMutability","getTotalBorrowedAmount","address","setTotalBorrowAmount","data","JSON","stringify","query","options","method","url","headers","body","error","response","Error","parse","totalBorrow","pools","length","pool","addr","borrowAsset","priceFeed","eth","Contract","roundData","methods","latestRoundData","call","answer","console","log","parseInt","borrowAmountRequested","getBorrowRate","setTotalBorrowRate","totalBorrowRate","borrowRate","getTotalLendAmount","setTotalLendAmount","totalLend","lendingDetailscopies","i","AmountLend","getLendRate","setTotalLendRate","s"],"mappings":"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","sourcesContent":["import request from 'request';\n// const Web3 = require(\"web3\");\nimport Web3 from 'web3';\nconst web3 = new Web3('https://kovan.infura.io/v3/9dc997986f8840daa0e6ccb1d8d0d757');\nconst aggregatorV3InterfaceABI = [\n  { inputs: [], name: 'decimals', outputs: [{ internalType: 'uint8', name: '', type: 'uint8' }], stateMutability: 'view', type: 'function' },\n  { inputs: [], name: 'description', outputs: [{ internalType: 'string', name: '', type: 'string' }], stateMutability: 'view', type: 'function' },\n  {\n    inputs: [{ internalType: 'uint80', name: '_roundId', type: 'uint80' }],\n    name: 'getRoundData',\n    outputs: [\n      { internalType: 'uint80', name: 'roundId', type: 'uint80' },\n      { internalType: 'int256', name: 'answer', type: 'int256' },\n      { internalType: 'uint256', name: 'startedAt', type: 'uint256' },\n      { internalType: 'uint256', name: 'updatedAt', type: 'uint256' },\n      { internalType: 'uint80', name: 'answeredInRound', type: 'uint80' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'latestRoundData',\n    outputs: [\n      { internalType: 'uint80', name: 'roundId', type: 'uint80' },\n      { internalType: 'int256', name: 'answer', type: 'int256' },\n      { internalType: 'uint256', name: 'startedAt', type: 'uint256' },\n      { internalType: 'uint256', name: 'updatedAt', type: 'uint256' },\n      { internalType: 'uint80', name: 'answeredInRound', type: 'uint80' },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  { inputs: [], name: 'version', outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }], stateMutability: 'view', type: 'function' },\n];\n\n// const request = require('request')\nexport function getTotalBorrowedAmount(address, setTotalBorrowAmount) {\n  const data = JSON.stringify({\n    query: `{\n            pools(where:{borrower:\"${address}\",loanStatus:\"Active\"}) {\n              id\n              borrowAmountRequested\n              borrowAsset\n              \n            }\n          } \n          `,\n  });\n  var options = {\n    method: 'POST',\n    url: 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    headers: { 'Content-Type': 'application/json' },\n    body: data,\n  };\n\n  request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    let totalBorrow = 0;\n    if (body) {\n      if (body.data) {\n        if (body.data.pools && body.data.pools.length > 0) {\n          for (var pool = 0; pool < body.data.pools.length; pool++) {\n            let addr;\n            if ((body.data.pools[pool].borrowAsset = '0x0000000000000000000000000000000000000000')) {\n              addr = '0x9326BFA02ADD2366b30bacB125260Af641031331';\n            }\n            const priceFeed = new web3.eth.Contract(aggregatorV3InterfaceABI, addr);\n            let roundData = (await priceFeed.methods.latestRoundData().call()).answer / 10 ** 8;\n            console.log(roundData);\n            totalBorrow += roundData * (parseInt(body.data.pools[pool].borrowAmountRequested) / 10 ** 18);\n          }\n        }\n      }\n    }\n    setTotalBorrowAmount(totalBorrow);\n  });\n}\n\nexport function getBorrowRate(address, setTotalBorrowRate) {\n  const data = JSON.stringify({\n    query: `{\n            pools(where:{borrower:\"${address}\",loanStatus:\"Active\"}) {\n                borrowRate\n            }\n          } \n          `,\n  });\n  var options = {\n    method: 'POST',\n    url: 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    headers: { 'Content-Type': 'application/json' },\n    body: data,\n  };\n\n  request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    let totalBorrowRate = 0;\n    if (body) {\n      if (body.data) {\n        if (body.data.pools && body.data.pools.length > 0) {\n          for (var pool = 0; pool < body.data.pools.length; pool++) {\n            totalBorrowRate = totalBorrowRate + parseInt(body.data.pools[pool].borrowRate);\n          }\n          if (body.data.pools.length == 0) {\n            setTotalBorrowRate(0);\n          } else {\n            setTotalBorrowRate(totalBorrowRate / body.data.pools.length);\n          }\n        }\n      }\n    }\n\n    // console.log(totalBorrowRate,body.data.pools.length);\n  });\n}\n\nexport function getTotalLendAmount(address, setTotalLendAmount) {\n  console.log('working');\n  const data = JSON.stringify({\n    query: `{\n            lendingDetailscopies(where:{lender:\"${address}\",loanStatus:\"Active\"}){\n             id\n             AmountLend\n             pool{\n                borrowAsset\n              }\n           }\n           }            \n          `,\n  });\n  var options = {\n    method: 'POST',\n    url: 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    headers: { 'Content-Type': 'application/json' },\n    body: data,\n  };\n\n  request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    let totalLend = 0;\n    if (body) {\n      if (body.data) {\n        console.log(body.data);\n        if (body.data.lendingDetailscopies && body.data.lendingDetailscopies.length > 0) {\n          for (var i = 0; i < body.data.lendingDetailscopies.length; i++) {\n            let addr;\n            if ((body.data.lendingDetailscopies[i].pool.borrowAsset = '0x0000000000000000000000000000000000000000')) {\n              addr = '0x9326BFA02ADD2366b30bacB125260Af641031331';\n            }\n            const priceFeed = new web3.eth.Contract(aggregatorV3InterfaceABI, addr);\n            let roundData = (await priceFeed.methods.latestRoundData().call()).answer / 10 ** 8;\n\n            totalLend += roundData * (parseInt(body.data.lendingDetailscopies[i].AmountLend) / 10 ** 18);\n          }\n          if (body.data.lendingDetailscopies.length == 0) {\n            setTotalLendAmount(0);\n          } else {\n            setTotalLendAmount(totalLend);\n          }\n        }\n      }\n    }\n  });\n}\n\nexport function getLendRate(address, setTotalLendRate) {\n  const data = JSON.stringify({\n    query: `{\n            pools(where:{borrower:\"${address}\",loanStatus:\"Active\"}) {\n                borrowRate\n            }\n          } \n          `,\n  });\n  var options = {\n    method: 'POST',\n    url: 'https://api.thegraph.com/subgraphs/name/sublime-finance/sublime',\n    headers: { 'Content-Type': 'application/json' },\n    body: data,\n  };\n\n  let s = 0;\n\n  request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    let totalBorrowRate = 0;\n    if (body) {\n      if (body.data) {\n        if (body.data.pools && body.data.pools.length > 0) {\n          for (var pool = 0; pool < body.data.pools.length; pool++) {\n            totalBorrowRate = totalBorrowRate + parseInt(body.data.pools[pool].borrowRate);\n          }\n          if (body.data.pools.length == 0) {\n            setTotalLendRate(0);\n          } else {\n            setTotalLendRate(((1 - s) * totalBorrowRate) / body.data.pools.length);\n          }\n        }\n      }\n    }\n\n    // console.log(totalBorrowRate,body.data.pools.length);\n  });\n}\n\n// getTotalBorrowedAmount(\"0x5a8043a7907c3a5c40ae52cff3abc026111ccd96\")\n// getBorrowRate(\"0x5a8043a7907c3a5c40ae52cff3abc026111ccd96\")\n"]},"metadata":{},"sourceType":"module"}