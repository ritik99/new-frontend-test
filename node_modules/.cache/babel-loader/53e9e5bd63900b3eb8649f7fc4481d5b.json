{"ast":null,"code":"import request from 'request';\nimport { getSymbol } from './../../utility/symbol';\nimport { SUBGRAPH_API_URL } from '../../utility/constants';\nimport { getSupportedTokens } from '../../utility/functions';\nexport function collateralborrowPools(address, setpooldata) {\n  let result;\n  const data = JSON.stringify({\n    query: `  {\n            pools(where:{id:\"${address}\"}) {\n              id\n              idealCollateralRatio\n              borrowAmountRequested\n              collateralAsset\n              borrowAsset\n            }\n        }`\n  });\n  var options = {\n    method: 'POST',\n    url: SUBGRAPH_API_URL,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: data\n  };\n  result = request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    var pools = [];\n\n    if (body) {\n      if (body.data) {\n        if (body.data.pools && body.data.pools.length > 0) {\n          if (body.data.pools[0]) {\n            let poolData = body.data.pools[0];\n            const collateralAssest = getSupportedTokens('collateralTokens').find(token => token.address.toLowerCase() === poolData.collateralAsset.toLowerCase());\n            var pool = {\n              collateralRatio: poolData.idealCollateralRatio / 10 ** 8 + '%',\n              borrowed_amount: poolData.borrowAmountRequested / 10 ** 18 + ' ' + getSymbol(poolData.borrowAsset),\n              collateralAssest\n            };\n            setpooldata(pool);\n          }\n        }\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/Users/ritikdutta/Desktop/sublime-frontend/src/query/pool/addCollateral.js"],"names":["request","getSymbol","SUBGRAPH_API_URL","getSupportedTokens","collateralborrowPools","address","setpooldata","result","data","JSON","stringify","query","options","method","url","headers","body","error","response","Error","parse","pools","length","poolData","collateralAssest","find","token","toLowerCase","collateralAsset","pool","collateralRatio","idealCollateralRatio","borrowed_amount","borrowAmountRequested","borrowAsset"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA,OAAO,SAASC,qBAAT,CAA+BC,OAA/B,EAAwCC,WAAxC,EAAqD;AAC1D,MAAIC,MAAJ;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BC,IAAAA,KAAK,EAAG;AACZ,+BAA+BN,OAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AAT8B,GAAf,CAAb;AAYA,MAAIO,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,GAAG,EAAEZ,gBAFO;AAGZa,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAHG;AAIZC,IAAAA,IAAI,EAAER;AAJM,GAAd;AAOAD,EAAAA,MAAM,GAAGP,OAAO,CAACY,OAAD,EAAU,gBAAgBK,KAAhB,EAAuBC,QAAvB,EAAiC;AACzD,QAAID,KAAJ,EAAW,MAAM,IAAIE,KAAJ,CAAUF,KAAV,CAAN;AACX,QAAID,IAAI,GAAGP,IAAI,CAACW,KAAL,CAAWF,QAAQ,CAACF,IAApB,CAAX;AACA,QAAIK,KAAK,GAAG,EAAZ;;AACA,QAAIL,IAAJ,EAAU;AACR,UAAIA,IAAI,CAACR,IAAT,EAAe;AACb,YAAIQ,IAAI,CAACR,IAAL,CAAUa,KAAV,IAAmBL,IAAI,CAACR,IAAL,CAAUa,KAAV,CAAgBC,MAAhB,GAAyB,CAAhD,EAAmD;AACjD,cAAIN,IAAI,CAACR,IAAL,CAAUa,KAAV,CAAgB,CAAhB,CAAJ,EAAwB;AACtB,gBAAIE,QAAQ,GAAGP,IAAI,CAACR,IAAL,CAAUa,KAAV,CAAgB,CAAhB,CAAf;AACA,kBAAMG,gBAAgB,GAAGrB,kBAAkB,CAAC,kBAAD,CAAlB,CAAuCsB,IAAvC,CACtBC,KAAD,IAAWA,KAAK,CAACrB,OAAN,CAAcsB,WAAd,OAAgCJ,QAAQ,CAACK,eAAT,CAAyBD,WAAzB,EADpB,CAAzB;AAGA,gBAAIE,IAAI,GAAG;AACTC,cAAAA,eAAe,EAAEP,QAAQ,CAACQ,oBAAT,GAAgC,MAAM,CAAtC,GAA0C,GADlD;AAETC,cAAAA,eAAe,EAAET,QAAQ,CAACU,qBAAT,GAAiC,MAAM,EAAvC,GAA4C,GAA5C,GAAkDhC,SAAS,CAACsB,QAAQ,CAACW,WAAV,CAFnE;AAGTV,cAAAA;AAHS,aAAX;AAKAlB,YAAAA,WAAW,CAACuB,IAAD,CAAX;AACD;AACF;AACF;AACF;AACF,GAtBe,CAAhB;AAuBD","sourcesContent":["import request from 'request';\nimport { getSymbol } from './../../utility/symbol';\nimport { SUBGRAPH_API_URL } from '../../utility/constants';\nimport { getSupportedTokens } from '../../utility/functions';\n\nexport function collateralborrowPools(address, setpooldata) {\n  let result;\n  const data = JSON.stringify({\n    query: `  {\n            pools(where:{id:\"${address}\"}) {\n              id\n              idealCollateralRatio\n              borrowAmountRequested\n              collateralAsset\n              borrowAsset\n            }\n        }`,\n  });\n\n  var options = {\n    method: 'POST',\n    url: SUBGRAPH_API_URL,\n    headers: { 'Content-Type': 'application/json' },\n    body: data,\n  };\n\n  result = request(options, async function (error, response) {\n    if (error) throw new Error(error);\n    var body = JSON.parse(response.body);\n    var pools = [];\n    if (body) {\n      if (body.data) {\n        if (body.data.pools && body.data.pools.length > 0) {\n          if (body.data.pools[0]) {\n            let poolData = body.data.pools[0];\n            const collateralAssest = getSupportedTokens('collateralTokens').find(\n              (token) => token.address.toLowerCase() === poolData.collateralAsset.toLowerCase(),\n            );\n            var pool = {\n              collateralRatio: poolData.idealCollateralRatio / 10 ** 8 + '%',\n              borrowed_amount: poolData.borrowAmountRequested / 10 ** 18 + ' ' + getSymbol(poolData.borrowAsset),\n              collateralAssest,\n            };\n            setpooldata(pool);\n          }\n        }\n      }\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}